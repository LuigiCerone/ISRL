#!/usr/bin/env python

import rospy
from std_msgs.msg import String
import sys, select, os
if os.name == 'nt':
  import msvcrt
else:
  import tty, termios

MAX_LIN_VEL = 10.00
MAX_ANG_VEL = 10.00

msg = """
Control Your Raspberry Car!
---------------------------
Moving around:
        w
   a    s    d
        x

space key, s : force stop

CTRL-C to quit
"""

e = """
Communications Failed
"""


def get_key():
    if os.name == 'nt':
        return msvcrt.getch()

    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key


def print_direction(direction):
    print("Direction: {}".format(direction))


if __name__=="__main__":
    if os.name != 'nt':
        settings = termios.tcgetattr(sys.stdin)

    rospy.init_node('teleop')
    pub = rospy.Publisher('direction', String, queue_size=10)

    status = 0
    direction = 'stop'
    last_key = 's'

    try:
        print(msg)
        while True:
            key = get_key()
            if key == last_key:
                continue
            else:
                last_key = key

            if key == 'w':
                direction = 'north'
                status = status + 1
            elif key == 'x':
                direction = 'south'
                status = status + 1
            elif key == 'a':
                direction = 'west'
                status = status + 1
            elif key == 'd':
                direction = 'east'
                status = status + 1
            elif key == ' ' or key == 's':
                direction = 'stop'
            else:
                if key == '\x03':
                    break
            print_direction(direction)

            if status == 20 :
                print(msg)
                status = 0

            dire = String(direction)
            pub.publish(dire)

    except:
        print(e)

    if os.name != 'nt':
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
